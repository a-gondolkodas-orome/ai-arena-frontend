mutation CreateContest($contestInput: ContestInput!) {
  createContest(contestInput: $contestInput) {
    __typename
    ... on Contest {
      ...ContestDetails
    }
    ... on CreateContestError {
      fieldErrors {
        gameId
        name
        date
      }
    }
    ... on GraphqlError {
      message
    }
  }
}

query GetContests {
  getContests {
    __typename
    ... on Contests {
      contests {
        id
        name
        game {
          name
        }
        date
      }
    }
    ... on GraphqlError {
      message
    }
  }
}

query GetContest($id: String!) {
  getContest(id: $id) {
    __typename
    ... on Contest {
      ...ContestDetails
    }
    ... on GraphqlError {
      message
    }
  }
}

mutation RegisterToContest($registration: ContestRegistration!) {
  registerToContest(registration: $registration) {
    __typename
    ... on Contest {
      ...ContestDetails
    }
    ... on RegisterToContestError {
      fieldErrors {
        contestId
        botId
      }
    }
    ... on GraphqlError {
      message
    }
  }
}

mutation UnregisterFromContest($contestId: String!) {
  unregisterFromContest(contestId: $contestId) {
    __typename
    ... on Contest {
      ...ContestDetails
    }
    ... on GraphqlError {
      message
    }
  }
}

mutation UpdateContestStatus($contestId: String!, $status: ContestStatus!) {
  updateStatus(contestId: $contestId, status: $status) {
    __typename
    ... on Contest {
      ...ContestDetails
    }
    ... on UpdateContestStatusError {
      from
      to
    }
    ... on GraphqlError {
      message
    }
  }
}

mutation StartContest($contestId: String!) {
  startContest(contestId: $contestId) {
    __typename
    ... on Contest {
      ...ContestDetails
    }
    ... on StartContestError {
      status
    }
    ... on GraphqlError {
      message
    }
  }
}

fragment ContestDetails on Contest {
  id
  game {
    id
    name
  }
  owner {
    id
    username
  }
  name
  date
  bots {
    id
    user {
      id
      username
    }
    name
  }
  matches {
    bots {
      id
      user {
        id
        username
      }
      name
    }
    runStatus {
      stage
      log
    }
    result {
      log
    }
  }
  status
}
